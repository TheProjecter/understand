#summary Everything related to running various OSes on QEMU
#labels RISC_OS,QEMU,OMAP3

= RISC OS on QEMU-OMAP3 =
If you prefer, there is a pre-patched version of [http://code.google.com/p/qemu-omap3 QEMU-OMAP3] [http://understand.googlecode.com/files/qemu-omap3-risc_os.tar.bz2 here]. Additional information and tools that may be useful are available [http://www.riscosopen.org/wiki/documentation/pages/Cortex-A8+port here].

  * Otherwise, download the patch from [http://understand.googlecode.com/files/qemu-omap3-patch.txt here], as well as the QEMU-OMAP3 [http://qemu-omap3.googlecode.com/files/qemu-omap3-v0.01.tar.bz2 tarball]
  * Unpack the QEMU-OMAP3 tarball in the usual manner ({{{bunzip2 qemu-omap3-v0.01.tar.bz2 && tar xvf qemu-omap3-v0.01.tar}}})
  * Apply the patch with {{{patch < qemu-omap3-patch.txt}}}, taking care to choose the {{{+++ qemu-omap3/}}} files, over the {{{--- qemu-omap3-orig/}}} ones
  * Ensure that a GCC 3.4.x release is installed, or install one from your Linux distribution's repositories (assuming you use a Linux distribution)
  * For speed, run {{{./configure --target-list=arm-softmmu && make}}} to build only the ARM emulator target
  * If everything went to plan, you should have these binaries and scripts in the QEMU-OMAP3 patched source directory:
|| {{{bb_nandflash_ecc}}} || {{{bb_nandflash.sh}}}|| {{{dyngen}}} || {{{qemu-img}}} || {{{qemu-nbd}}} || 
  * There should also be a {{{qemu-system-arm}}} binary in the {{{arm-softmmu}}} subdirectory
  * Download and unzip the BeagleBoard ROM archive from [http://www.riscosopen.org/zipfiles/misc/rom-omap.5.15.zip?1243515133 here] - this may be superseded by later versions listed on [http://www.riscosopen.org/content/downloads/other-zipfiles this] page
  * Obtain the UBoot and XLoader test image from [http://qemu-omap3.googlecode.com/files/image-v0.01.tar.bz2 here], and extract the contents using {{{bzip2}}} and {{{tar}}}
  * Rename the extracted {{{riscos}}} ROM image file from {{{rom-omap.5.15.zip}}} to {{{riscos.rom}}}

== Attempting to run a bare RISC OS ROM image on QEMU-OMAP3, without patches ===
Take heed that the BeagleBoard and most ARM-based devices emulated by QEMU-OMAP3 only support a maximum of 256MB of RAM.

If you didn't patch QEMU-OMAP3, expect results similar to these. If you're lucky, you might also see a window filled with a white framebuffer screen:

{{{[tyson@nagasaki ~]$ ./qemu-omap3/arm-softmmu/qemu-system-arm -M beagle  -kernel riscos  -m 256}}}<br/>{{{gptimer ckl 8000}}}<br/>{{{gptimer ckl 8000}}}<br/>{{{gptimer ckl 8000}}}<br/>{{{gptimer ckl 8000}}}<br/>{{{gptimer ckl 8000}}}<br/>{{{gptimer ckl 8000}}}<br/>{{{gptimer ckl 8000}}}<br/>{{{gptimer ckl 8000}}}<br/>{{{gptimer ckl 8000}}}<br/>{{{gptimer ckl 8000}}}<br/>{{{gptimer ckl 8000}}}<br/>{{{gptimer ckl 8000}}}<br/>{{{Segmentation fault}}} 


If you used {{{./qemu-omap3/arm-softmmu/qemu-system-arm -M n800 -kernel riscos -m 256}}} instead, you'll get the same {{{gptimer ckl 8000}}} spray, but with this little extra:

{{{f->base 0 f->size 1000000}}}<br/>{{{mipid_reset: Display off}}}<br/>{{{f->base 4000000 f->size 1000000}}}<br/>{{{Unassigned mem writeb 49020000 = 0x41 pc 80010064}}}<br/>