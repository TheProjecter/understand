#summary One-sentence summary of this page.

==Mac OS X Archival Experiment==
It seems that not all metadata is archived by every archiving tool available for Mac OS X, and tools that claim to be able to archive a piece of metadata may not do so with full fidelity.

===What Does It Involve?===
  * Create a new directory that contains a set of files of UNIX-specific, special types: 
  # a FIFO/named pipe file
  # a block special file
  # a character special file
  # at least one symbolic link
  # at least one hard link
  # a socket file (or a hard link to one)

  * Create a number of Mac OS X-specific objects, including: 
  # a Finder {{{Burn Folder}}}
  # a Finder {{{Smart Folder}}}
  # an {{{Alias}}}
  # a file with the Finder {{{Locked}}} ({{{UserImmutable}}}) attribute
  # a file with the {{{Stationary Pad}}} attribute
  # a File with a Finder {{{Label}}} (one of {{{Red}}}, {{{Orange}}}, {{{Yellow}}}, {{{Green}}}, {{{Blue}}}, {{{Purple}}} or {{{Grey}}})
  # a file with a Mac OS X-style {{{Finder Comment}}}
  # a file and/or directory with a custom icon
  # a Quarantined file

===Caveats and Historical Issues===
Note: Some of these problems have been fixed in later versions, or have been worked around in some manner. 
 
  * The version of XAR (1.4) shipped with Mac OS X 10.5.x contains a [http://code.google.com/p/xar/issues/detail?id=49 bug] that causes ACLs to be stripped away when archived - although they're still present in the file system itself
  * In addition XAR 1.4 doesn't seem to care about Finder Creation timestamps, or Finder Comments (exposed as a {{{com.apple.metadata:kMDItemFinderComment}}} extended attribute)
  * Pax and TAR lose [http://sqrl.it/?6rdc6 BSD Flags] when archiving files, meaning that Finder Locks are also lost
  * XAR 1.5.2 seems to have problems with archiving and restoring files containing extended attributes based upon Samba NTFS Streams, thanks to an XML generation and parsing issue that has been [http://code.google.com/p/xar/issues/detail?id=70 reported] to the developers


==NTFS Streams and MS-DOS/Windows Flags on HFS+ (via Samba)==
  * When a file is created using a Windows XP (and 2000?) system, no NTFS attributes are added, and Samba pretends that the {{{Archive}}} bit is set - although this is never set on the physical host file system, and attempts to clear it are silently ignored
  * When the Windows Explorer {{{Summary}}} tab is viewed for the first time, two NTFS Streams are initialised, which correspond to the following HFS+ extended attributes:{{{:SUMMARYINFORMATION:$DATA}}} and {{{:{4C8CC155-6C1E-11D1-8E41-00C04FB9386D}:$DATA}}}
  * Running {{{xattr -l New\ Text\ Document.txt}}} reveals that the attributes contain data similar to:
{{{
:SUMMARYINFORMATION:$DATA:
0000   FE FF 00 00 05 01 02 00 00 00 00 00 00 00 00 00    ................
0010   00 00 00 00 00 00 00 00 01 00 00 00 E0 85 9F F2    ................
0020   F9 4F 68 10 AB 91 08 00 2B 27 B3 D9 30 00 00 00    .Oh.....+'..0...
0030   28 00 00 00 02 00 00 00 01 00 00 00 18 00 00 00    (...............
0040   00 00 00 80 20 00 00 00 02 00 00 00 E4 04 00 00    .... ...........
0050   13 00 00 00 09 08 00 00                            ........

:{4C8CC155-6C1E-11D1-8E41-00C04FB9386D}:$DATA:
0000   00                                                 .

}}}
  * Setting the {{{Category}}} property writes an NTFS Stream and corresponding extended attribute that looks similar to:
{{{
:DOCUMENTSUMMARYINFORMATION:$DATA:
0000   FE FF 00 00 05 01 02 00 00 00 00 00 00 00 00 00    ................
0010   00 00 00 00 00 00 00 00 01 00 00 00 02 D5 CD D5    ................
0020   9C 2E 1B 10 93 97 08 00 2B 2C F9 AE 30 00 00 00    ........+,..0...
0030   4C 00 00 00 03 00 00 00 01 00 00 00 28 00 00 00    L...........(...
0040   00 00 00 80 30 00 00 00 02 00 00 00 38 00 00 00    ....0.......8...
0050   00 00 00 00 00 00 00 00 02 00 00 00 E4 04 00 00    ................
0060   13 00 00 00 09 08 00 00 1E 00 00 00 09 00 00 00    ................
0070   43 61 74 65 67 6F 72 79 00 00 00 00                Category....

}}}
  * When the {{{Category}}} property is set, and no other properties are modified, the {{{:SUMMARYINFORMATION:$DATA:}}} and {{{:{4C8CC155-6C1E-11D1-8E41-00C04FB9386D}:$DATA:}}} extended attributes are unchanged from their initial state

=== Samba Metadata Options ===
  * The manpage for {{{smb.conf}}} mentions some interesting configuration options that relate to metadata:
  # {{{dos filemode =}}} {{{no}}}/{{{yes}}}
  # {{{dos filetime resolution =}}} {{{no}}}/{{{yes}}}
  # {{{dos filetimes =}}} {{{yes}}}/{{{no}}}
  # {{{ea support =}}} {{{no}}}/{{{yes}}}
  * The default options are listed in order of potential values, sorted by the default
  * The version that ships with Mac OS X contains even more potential options that aren't mentioned in the manpage

=== Cygwin File Attributes (NTEA)===
  * When the {{{CYGWIN}}} environment variable contains {{{ntea}}}, POSIX file permissions will be stored in NTFS Streams
  * For example, setting a file's permissions to {{{777}}} results in something similar to:
{{{

user..UNIXATTR:
0000   FF 01 00 00                                        ....

}}}

==Mac OS X 10.5 Finder/Spotlight Comments==
  * Exposed in a pseudo-extended attribute that looks like this:
{{{
com.apple.metadata:kMDItemFinderComment:
0000   62 70 6C 69 73 74 30 30 5F 10 11 53 70 6F 74 6C    bplist00_..Spotl
0010   69 67 68 74 20 43 6F 6D 6D 65 6E 74 08 00 00 00    ight Comment....
0020   00 00 00 01 01 00 00 00 00 00 00 00 01 00 00 00    ................
0030   00 00 00 00 00 00 00 00 00 00 00 00 1C             .............

}}}
  * It seems that no additional extended attributes are created, although some presumably exist
  * We can extract this, scrub out the ASCII textual representation and line numbers, paste that result into a hex editor, and produce a file of type {{{Apple binary property list}}}
  * Using {{{plutil -convert xml1}}} on this file, we can attempt to create an XML representation of the comment that looks like this:
{{{
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<string>Spotlight Comment</string>
</plist>

}}}

===Experiment===
  * It may possible to add a Finder comment to a new file by editing the string in the XML that was produced earlier, and converting it back into a binary property list file, like this:
  * Create a plain-text {{{CustomComment.plist}}} file containing this content:
{{{
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<string>Hand-crafted Comment</string>
</plist>
}}}
 * Check the validity of the XML file using {{{plutil -lint CustomComment.plist}}}
 * Convert it into a binary {{{plist}}} using {{{plutil -convert binary1 CustomLabel.plist}}}
 * Use {{{touch}}} to create a new, empty file named {{{NoComment}}}
 * Attempt to apply the new "comment" to {{{NoComment}}} using {{{xattr -w "com.apple.metadata:kMDItemFinderComment" `cat CustomComment.plist` NoComment}}}
 * Notice that the Finder Comment hasn't changed, since the conversion processes are seemingly lossy (need to investigate)

==Mac OS X Finder Colour Labels==
===Red===
  * Exposed by a pseudo-extended attribute that looks like:
{{{
com.apple.FinderInfo:
0000   00 00 00 00 00 00 00 00 00 0C 00 00 00 00 00 00    ................
0010   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    ................

}}}
  * Really looks like this, according to {{{hfsdebug-lite}}}:
{{{
  # Finder Info
  fdType               = 0
  fdCreator            = 0
  fdFlags              = 0000000000001100
                       . Color label = red
  fdLocation           = (v = 0, h = 0)
  opaque               = 0
}}}

===Orange===
  * Exposed by a pseudo-extended attribute that looks like:
{{{
com.apple.FinderInfo:
0000   00 00 00 00 00 00 00 00 00 0E 00 00 00 00 00 00    ................
0010   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    ................

}}}
  * Really looks like this, according to {{{hfsdebug-lite}}}:
{{{
  # Finder Info
  fdType               = 0
  fdCreator            = 0
  fdFlags              = 0000000000001110
                       . Color label = orange
  fdLocation           = (v = 0, h = 0)
  opaque               = 0
}}} 

===Yellow===
  * Exposed by a pseudo-extended attribute that looks like:
{{{
com.apple.FinderInfo:
0000   00 00 00 00 00 00 00 00 00 0A 00 00 00 00 00 00    ................
0010   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    ................

}}}
  * Really looks like this, according to {{{hfsdebug-lite}}}:
{{{
  # Finder Info
  fdType               = 0
  fdCreator            = 0
  fdFlags              = 0000000000001010
                       . Color label = yellow
  fdLocation           = (v = 0, h = 0)
  opaque               = 0
}}}

===Green===
  * Exposed by a pseudo-extended attribute that looks like:
{{{
com.apple.FinderInfo:
0000   00 00 00 00 00 00 00 00 00 04 00 00 00 00 00 00    ................
0010   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    ................
}}}
  * Really looks like this, according to {{{hfsdebug-lite}}}:
{{{
  # Finder Info
  fdType               = 0
  fdCreator            = 0
  fdFlags              = 0000000000000100
                       . Color label = green
  fdLocation           = (v = 0, h = 0)
  opaque               = 0
}}}

==A Mac OS 7.0.1 Alias==
http://understand.googlecode.com/files/MacOS701AliasFixed.png
==Mac OS 7.0.1 User, Group, and Member files==