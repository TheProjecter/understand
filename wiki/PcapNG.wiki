#summary Content related to the new pcap-ng packet capture file format
#labels pcapng,ntar,Networks,File_Formats
==pcap-ng File Format==
  * The [http://wiki.wireshark.org/Development/PcapNg pcap-ng] file format was intended to supersede the previous [http://wiki.wireshark.org/Development/LibpcapFileFormat libpcap file format] in the long-term, and fixes several shortcomings and limitations in that file format
  * As of writing, the current draft specification is [http://www.winpcap.org/ntar/draft/PCAP-DumpFileFormat.html here], and is subject to change at any time
  * A number of sample captures, containing several different protocols, link-layer types and format features are available on our [http://code.google.com/p/understand/downloads/list Downloads] page (tagged with "[http://code.google.com/p/understand/downloads/list?q=label:ntar ntar]" and "[http://code.google.com/p/understand/downloads/list?q=label:pcapng pcapng]")
  * Additional sample files are available at [http://wiki.wireshark.org/Development/PcapNg this page] on the Wireshark Wiki 
  * There is a [http://tcpreplay.synfin.net/trac/ticket/23 bug] on the [http://tcpreplay.synfin.net/ TCPreplay project] bug tracker requesting support for pcap-ng, although it seems that support has not been implemented yet

==Conversion/Encapsulation Issues and Current (Implementation) Shortfalls/Bugs==
===Wireshark (1.3.0-SVN train)===
  * Saving [http://en.wikipedia.org/wiki/DPNSS DPNSS] packets from [http://understand.googlecode.com/files/D-1-Anonymous-Anonymous-D-OFF-27d01m2009y-00h00m00s-0a0None.trc EyeSDN trace files] into pcap-ng files produces packets with {{{WTAP_ENCAP}}} set to {{{0}}}, and the data cannot be dissected - it seems that there is no DLT value for DPNSS at present
  * Storing Linux mmapped USB packets in pcap-ng files produces files with unusable metadata (e.g. all packets are dissected as {{{URB_ISOCHRONOUS}}} regardless of type) - Reported as [https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=3560 bug 3560] 
  * {{{Juniper ATM1 PIC}}} {{{VC-MUX}}} packets in libpcap files become {{{ATM OAM Cell}}} packets when saved into pcap-ng files, and cannot be dissected for a currently unknown reason
  * I<sup>2</sup>C/IPMB bus and event type information is lost when packets from libpcap files are saved as pcap-ng (bus number is reset to {{{255}}}, and event type is set to {{{0x4783c623}}} ({{{unknown state event}}})
  * It appears that it is not possible currently, to export Bluetooth HCI H1 packets in Symbian OS btsnoop capture files to pcap-ng
  * It appears that Apple [http://understand.googlecode.com/files/Apple1394.cap IP-over-1394] packets within libpcap files are "lost"/"become invisible" when converted to pcap-ng files, and cannot be accessed with Wireshark, although they are still in the file
  * Raw MTP2 packets in libpcap files are also lost when converting them to pcap-ng, example file [http://understand.googlecode.com/files/ansi_tcap_over_itu_sccp_over_mtp3_over_mtp2.pcap here]

==Fixed Issues==
  * It was possible to crash versions of Wireshark prior to Wireshark 1.3.0 (SVN revision 28851) whilst loading some pcap-ng files with a large number of packets, or beyond a certain (unknown) size - see [http://understand.googlecode.com/files/USB_DVB_New.ntar.bz2 here] or the bug for sample files - Reported as bug [https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=3565 3565], which is now resolved

==Hall of Shame==
The Hall of Shame links to several files that currently crash implementations of pcap-ng, due to either bugs in an implementation, or issues with the structure or content of the file itself, or are not parsed correctly by current implementations. Hopefully, these problems will be resolved over time.
  * The mentioned files at [https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=3565 Wireshark Bug 3565] crash several SVN revisions of Wireshark and dumpcap (from 28785 to 28836 so far) - this is now fixed, as of SVN revision 28851
  * The bug in Wireshark 1.0.7 [https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=3524 here] mentions issues related to Interface IDs in {{{Interface Description Blocks}}} and {{{Enhanced Packet Blocks}}} - this was fixed in Wireshark 1.2.0pre2, although the information may be useful for people working with files produced by this early version of Wireshark

==Mailing Lists==
Evolution of the pcap-ng file format is driven by several mailing lists. These are splintered between the following:
  * [http://www.mail-archive.com/wireshark-dev@wireshark.org/ wireshark-dev]
  * [http://www.winpcap.org/pipermail/ntar-workers ntar-workers]