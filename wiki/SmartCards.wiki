#summary Content related to smartcards (and RFID/NFC)
#labels Smartcards,NFC,RFID

= Introduction =

Add your content here.

= ISO/IEC 7816 Contact Cards =

== Hardware ==

=== EMV payment cards ===

=== GSM and UMTS SIM cards ==

=== Tesco Mobile UK USIM card ===

  * The {{{pcsc-scan}}} utility reports: 

{{{
ATR: 3B 9F 95 80 1F 43 80 31 E0 73 36 21 13 57 4A 33 0E 10 31 41 00 B0
+ TS = 3B --> Direct Convention
+ T0 = 9F, Y(1): 1001, K: 15 (historical bytes)
  TA(1) = 95 --> Fi=512, Di=16, 32 cycles/ETU
    125000 bits/s at 4 MHz, fMax for Fi = 5 MHz => 156250 bits/s
  TD(1) = 80 --> Y(i+1) = 1000, Protocol T = 0 
-----
  TD(2) = 1F --> Y(i+1) = 0001, Protocol T = 15 - Global interface bytes following 
-----
  TA(3) = 43 --> Clock stop: state L - Class accepted by the card: (3G) A 5V B 3V 
+ Historical bytes: 80 31 E0 73 36 21 13 57 4A 33 0E 10 31 41 00
  Category indicator byte: 80 (compact TLV data object)
    Tag: 3, len: 1 (card service data byte)
      Card service data byte: E0
        - Application selection: by full DF name
        - Application selection: by partial DF name
        - BER-TLV data objects available in EF.DIR
        - EF.DIR and EF.ATR access services: by GET RECORD(s) command
        - Card with MF
    Tag: 7, len: 3 (card capabilities)
      Selection methods: 36
        - DF selection by path
        - DF selection by file identifier
        - Short EF identifier supported
        - Record number supported
      Data coding byte: 21
        - Behaviour of write functions: proprietary
        - Value 'FF' for the first byte of BER-TLV tag fields: invalid
        - Data unit in quartets: 2
      Command chaining, length fields and logical channels: 13
        - Logical channel number assignment: by the card
        - Maximum number of logical channels: 4
    Tag: 5, len: 7 (card issuer's data)
      Card issuer data: 4A 33 0E 10 31 41 00
+ TCK = B0 (correct checksum)

Possibly identified card (using /home/tyson/.smartcard_list.txt):
3B 9F 95 80 1F 43 80 31 E0 73 36 21 13 57 4A 33 0E 10 31 41 00 B0
	SIM card O2 (UK, Pay-As-You-Go)
	Tesco Mobile (UK) SIM
}}}

  * Seems to be based upon the "Gemplus [http://cosconor.fr/GSM/Divers/Others/Cours/SIM%20Cards/GemXplore3G%20V2.pdf GemXplore 3G] USIM" product, according to comparisons of ATR values from Ludovic's database beginning with {{{0x3B9F95801F}}}.

  * Unusual in that it returns an EMV-style {{{0x9F7F}}}/CPLC tag, similar to the following, according to [http://code.google.com/p/cardpeek/ CardPeek]:

[http://code.google.com/p/understand/source/browse/trunk/smartcards/Tesco_Mobile_USIM_EMV.xml https://lh3.googleusercontent.com/-R3nm7Dzgx0o/TwSA09hDbnI/AAAAAAAAEoY/9gCxIIt7E-U/s640/EMV_USIM.png]

=== Oddities ===
=== TouchATag SAM (Secure Application Module) ===

  * The {{{pcsc-scan}}} utility reports:

{{{
ATR: 3B BE 95 00 00 41 03 00 00 00 00 00 00 00 00 00 02 90 00
+ TS = 3B --> Direct Convention
+ T0 = BE, Y(1): 1011, K: 14 (historical bytes)
  TA(1) = 95 --> Fi=512, Di=16, 32 cycles/ETU
    125000 bits/s at 4 MHz, fMax for Fi = 5 MHz => 156250 bits/s
  TB(1) = 00 --> VPP is not electrically connected
  TD(1) = 00 --> Y(i+1) = 0000, Protocol T = 0 
-----
+ Historical bytes: 41 03 00 00 00 00 00 00 00 00 00 02 90 00
  Category indicator byte: 41 (proprietary format)

Possibly identified card (using /home/tyson/.smartcard_list.txt):
3B BE 95 00 00 41 03 00 00 00 00 00 00 00 00 00 02 90 00
	touchatag SAM card
	Spanish University of Murcia smart ID card - Old version with CajaMurcia Banking card integrated (Maestro card) (M.Mar OS) - Also used by many others spanish universities
}}}

  * This SAM appears to have a partially documented command set (which I believe to be based upon the [http://wenku.baidu.com/view/9e687fe2524de518964b7db7.html ACOS3] one, after reading [http://www.libnfc.org/community/topic/261/touchatag-mifare-problem/ this] forum post), but is unsupported by many common smartcard handling tools.

  * A combination of reverse-engineering the USB traffic generated by using the proprietary Windows client, and searching the Web for APDUs from log files lends some credence to that thought. 

  * According to the {{{opensc-tool -c acos5 -f}}} command, the root of the SAM's file system contains the following objects:

{{{
3f00 type:  DF, size: 0
select[N/A] lock[N/A] delete[N/A] create[N/A] rehab[N/A] inval[N/A] list[N/A] 

  3f00ef01 type: iEF, ef structure: linvar, size: 0
  read[N/A] update[N/A] erase[N/A] write[N/A] rehab[N/A] inval[N/A] 

  3f00ef03 type: iEF, ef structure: linvar, size: 0
  read[N/A] update[N/A] erase[N/A] write[N/A] rehab[N/A] inval[N/A] 

}}}

=== TouchATag SAM APDUs ===

||<b>Command</b>||<b>Response</b>||<b>Purpose</b>||
||<font color="red">80</font> <font color="purple">14</font> <font color="green">00</font> 00 08||49 21 8C 28 94 1D 8A F4 90 00||<font color="purple">Get Card Info</font> - <font color="green">8 byte Serial Number</font>||
||<font color="red">80</font> <font color="purple">14</font> <font color="green">04</font> 00 06||30 30 36 38 38 32 90 00||<font color="purple">Get Card Info</font> - <font color="green">SAM ID?</font>||
||<font color="red">80</font> <font color="purple">14</font> <font color="green">06</font> 00 08||41 43 4f 53 06 04 08 20 90 00||<font color="purple">Get Card Info</font> - <font color="green">Operating System Revision</font>||

== Software ==
  * The [http://www.opensc-project.org/opensc OpenSC project] supply a number of tools for working with contact smartcards under Windows, Mac OS X, and Linux (plus other UNIX-esque operating systems). 

== Tracing APDUs under Windows 7 (x86-64) ==

*Note:* Administrative privileges may be necessary for the successful completion of this activity.

  * Download the [http://www.fernandes.org/apduview/apduview.zip apduview.zip] archive from [http://www.fernandes.org/apduview/index.html this page]

  * Extract the archive's {{{winscard.dll}}} file to the location of the executable that utilises the PCSC APIs (e.g. {{{C:\Program Files (x86)\touchatag}}}).

  * Copy {{{C:\Windows\SysWOW64\WinSCard.dll}}} to the same directory as the executable, under the new name of {{{original.dll}}} (e.g. {{{C:\Program Files (x86)\touchatag\original.dll}}}).

  * Run the executable, and perform any necessary tasks that invoke PCSC APIs.

  * Quit the application, and then inspect the newly-created {{{winscard.txt}}} file.

== Other Information ==
  * A [http://doc.utwente.nl/55705/1/dsse-tr-95-5.pdf paper] on the subject of smartcards and smartcard operating systems was published in 1995 by Pieter H. Hartel, and Eduard K. de Jong Frz at the University of Southampton's Department of Electronics and Computer Science.

  * A popular [http://ludovic.rousseau.free.fr/softwares/pcsc-tools/smartcard_list.txt database] of smartcard ATR (Answer To Reset) values is maintained by [http://ludovicrousseau.blogspot.com/ Ludovic Rousseau].

  * A [http://www.ugosweb.com/emv/index.aspx database] of EMV tag descriptions, derived from the EMVCo specifications is published by Ugo Chirico.

= 13.56 MHz RFID =

== Software ==

  * An Open Source implementation of an NFC stack, and various related utilities is available from the [http://www.libnfc.org/documentation/introduction LibNFC] project.

  * The author of this page has released a number of small utilities, and enhancements to third-party ones in a [https://bitbucket.org/vmlemon/smartcardtools repository] on BitBucket.

  * A link to a tool for examining data stored on Atmel CryptoRF tokens, and errata is available in [http://www.libnfc.org/community/topic/235/solved-info-about-nfccryptorf/ this forum post].

  * The [http://rfidiot.org/ RFIDIOT] project supply a package of tools for manipulating the contents of various types of RFID tokens, and examining Machine-Readable Travel Documents and EMV cards.  

  * A driver that supposedly allows for use of LibNFC with generic PCSC-enabled applications is available from the [{{{ifdnfc}}} http://ifdnfc.svn.sourceforge.net/] project on SourceForge. <br/> This doesn't seem to build against the latest version of LibNFC:

{{{
ifd-nfc.c: In function ‘IFDHTransmitToICC’:
ifd-nfc.c:355:17: error: too few arguments to function ‘nfc_initiator_transceive_bytes’
/usr/local/include/nfc/nfc.h:80:19: note: declared here

}}}

== Datasheets ==

  * A [http://idtronic-smarttags.com/pdfs/cards/STM%20SRI512.pdf datasheet] is available for the STMicroElectronics SRI512 ISO/IEC 14443-B chipset.

  * A [http://www.acs.com.hk/drivers/eng/TDS_TOPAZ.pdf datasheet] is available from ACS for the InnoVision/Broadcom Topaz family of ISO/IEC 14443-A chipsets. 

  * A [http://datasheets.maxim-ic.com/en/ds/MAX66040.pdf redacted datasheet] is available for Maxim's [http://www.maxim-ic.com/datasheet/index.mvp/id/6203 MAX66040] ISO/IEC 14443-B chipset.

  * A [http://mifare.net/index.php/download_file/view/5/ datasheet] (MF0ICU1) is available for the [http://mifare.net/products/mifare-smartcard-ic-s/mifare_ultralight/ MiFare UltraLight] ISO/IEC 14443-A chipset.

== Hardware ==

=== ISO/IEC 14443-A tokens ===


=== NXP !MiFare Classic 4KB ===

  * LibNFC's {{{nfc-list -v}}} command reports:

{{{
1 ISO14443A passive target(s) found:
    ATQA (SENS_RES): 00  02  
* UID size: single
* bit frame anticollision supported
       UID (NFCID1): 7c  52  49  e4  
      SAK (SEL_RES): 18  
* Not compliant with ISO/IEC 14443-4
* Not compliant with ISO/IEC 18092
Fingerprinting based on ATQA & SAK values:
* Mifare Classic 4K
* SmartMX with Mifare 4K emulation

}}}

  * Using the [http://code.google.com/p/nfc-tools/wiki/mfoc MFOC utility] under Linux, it is possible to derive the sector keys for a genuine MiFare Classic card, whilst dumping and decrypting its entire contents in a reasonable timeframe (several minutes) on a moderately powerful PC. <br/> It appears that this tool does not work properly under VirtualBox, due to latency induced by its USB passthrough implementation.

=== NXP !MiFare DESFire EV1 ===

  * LibNFC's {{{nfc-list -v}}} command reports:


{{{
1 ISO14443A passive target(s) found:
    ATQA (SENS_RES): 03  44  
* UID size: double
* bit frame anticollision supported
       UID (NFCID1): 04  8b  1f  f1  ad  26  80  
      SAK (SEL_RES): 20  
* Compliant with ISO/IEC 14443-4
* Not compliant with ISO/IEC 18092
                ATS: 75  77  81  02  80  
* Max Frame Size accepted by PICC: 64 bytes
* Bit Rate Capability:
  * PICC to PCD, DS=2, bitrate 212 kbits/s supported
  * PICC to PCD, DS=4, bitrate 424 kbits/s supported
  * PICC to PCD, DS=8, bitrate 847 kbits/s supported
  * PCD to PICC, DR=2, bitrate 212 kbits/s supported
  * PCD to PICC, DR=4, bitrate 424 kbits/s supported
  * PCD to PICC, DR=8, bitrate 847 kbits/s supported
* Frame Waiting Time: 77.33 ms
* Start-up Frame Guard Time: 0.6041 ms
* Node ADdress not supported
* Card IDentifier supported
* Historical bytes Tk: 80  
  * No COMPACT-TLV objects found, no status found
Fingerprinting based on ATQA & SAK values:
* Mifare DESFire / Desfire EV1

}}}

=== NXP !MiFare !UltraLight ===

  * LibNFC's {{{nfc-list -v}}} command reports:

{{{
1 ISO14443A passive target(s) found:
    ATQA (SENS_RES): 00  44  
* UID size: double
* bit frame anticollision supported
       UID (NFCID1): 04  45  57  ba  34  23  80  
      SAK (SEL_RES): 00  
* Not compliant with ISO/IEC 14443-4
* Not compliant with ISO/IEC 18092
Fingerprinting based on ATQA & SAK values:
* Mifare Ultralight
* Mifare UltralightC

}}}

=== ISO/IEC 14443-B tokens ===

  * [http://code.google.com/p/libnfc/issues/detail?id=168 Issue #168] on the LibNFC project's issues list contains some details pertinent to the proprietary "14443-B'" technology used by some Calypso transport cards.

=== Maxim MAX66040E-000AA+ ===

  * LibNFC's {{{nfc-list -v}}} command reports:

{{{
1 ISO14443B passive target(s) found:
               PUPI: a2  a6  02  00  
   Application Data: 30  00  2b  e0  
      Protocol Info: 77  21  71  
* Bit Rate Capability:
 * PICC to PCD, 1etu=64/fc, bitrate 212 kbits/s supported
 * PICC to PCD, 1etu=32/fc, bitrate 424 kbits/s supported
 * PICC to PCD, 1etu=16/fc, bitrate 847 kbits/s supported
 * PCD to PICC, 1etu=64/fc, bitrate 212 kbits/s supported
 * PCD to PICC, 1etu=32/fc, bitrate 424 kbits/s supported
 * PCD to PICC, 1etu=16/fc, bitrate 847 kbits/s supported
* Maximum frame sizes: 32 bytes
* Protocol types supported: ISO/IEC 14443-4
* Frame Waiting Time: 38.66 ms
* Frame options supported: NAD 

}}}

  * These cards are advertised as having a 64-bit UID, consisting of data in the {{{PUPI}}} field (e.g. {{{a2  a6  02  00}}} or {{{34  ab  02  00}}}), and data in the {{{Application Data}}} field (e.g. {{{77  21  71}}}).

  * The {{{Application Data}}} field supposedly contains the "upper 32 bits of the UID" (which appears to be consistent between new cards); and the (variable) PUPI corresponds to the "lower 32 bits of the UID".

== Hardware Suppliers ==

  * Atmel of the USA have a [http://www.atmel.com/forms/Samples.asp?category_id=172&family_id=671&source=getting_started product sampling programme]. <br/> Although the order process appears to be successful (since I receive an e-mail in my university account), I have had limited success with using the confirmation URL provided in said e-mail.

  * [http://trac.switch-science.com/wiki/FeliCa-international-order Switch Science] of Japan appear to be supplying Sony FeliCa (RC-S701) tags on an international basis - although the author cannot vouch for the company's service, due to having never utilised it.

  * The Identive Group of the USA appear to be supplying [http://www.identivenfc.com/google-nfc-tags/google-nfc-tags-type1.htm Topaz 512-byte tags] on an international basis - although the author cannot vouch for the company's service, due to having never utilised it.

  * Maxim supply a number of RFID-related products through a [https://shop.maxim-ic.com/storefront/searchsample.do?event=Sample&menuitem=Sample free sampling programme] - although shipments are slightly delayed due to requiring internal Business Manager authorisation; and a commercial or academic e-mail address is required for successful order approval. <br/> Samples ordered within the UK are usually despatched from a UK-based warehouse, if memory serves correctly.

== Other Information ==

  * The [http://wiki.yobi.be/wiki/ YobiWiki] has a fairly exhaustive [http://wiki.yobi.be/wiki/RFID page] on Radio Frequency Identification-related content.